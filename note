
TASK 1:
	salt = random(32 byte)
	hash_pass = hash(passwd + salt)

	storage: passwd = salt + hash_pass

	get hash_pass and salt: 
		salt = passwd[:32]  (because salt length is 32)
		hash_pass = passwd[32:]
		
	ref: 
		- https://nitratine.net/blog/post/how-to-hash-passwords-in-python/
		- https://medium.com/@pYdeas/the-point-of-salting-and-hashing-passwords-demonstrated-with-python-4879a156d99a

---------------------------------------

TASK 2:
	gen RSA_PubKey_PEM and RSA_PriKey_PEM (RSA) (length 2048) 
	
	RSA_PriKey_PEM -> encode(AES)
		- AES_PriKey(passphrase)
		
	storage: 
		- RSA_PriKey_PEM.encode(AES_PubKey())
		- RSA_PubKey_PEM
		
	ref: 
		- AES: https://blog.boot.dev/cryptography/aes-256-cipher-python-cryptography-examples/
		- RSA: https://cryptobook.nakov.com/asymmetric-key-ciphers/rsa-encrypt-decrypt-examples
		- RSA: https://stackoverflow.com/questions/30056762/rsa-encryption-and-decryption-in-python
		- RSA: https://stackoverflow.com/questions/70841986/how-to-add-a-custom-rsa-key-pair-to-a-pem-file
	


